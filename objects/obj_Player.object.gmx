<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playertest</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
hp = 100;
//event_inherited()
spd = 4;
image_speed = 0;
func_Ginput(); //get input
hspd = 0;
vspd = 0;
len = 0;
dir = 0;
state = state_mv; //lets the player move (duh)
canattack = true;
depth = -y; //used for fake z axis i guess
//team = 1; //used to not damage team members or to not get damaged
whereisp = room_get_name(room) //used for saving function

//set sprites vars
//playerright = draw_sprite(spr_Kevin, 0, x, y);
//playerur = draw_sprite(spr_Kevin, 1, x, y);
//playerup = draw_sprite(spr_Kevin, 2, x, y);
//playerul = draw_sprite(spr_Kevin, 3, x, y);
//playerleft = draw_sprite(spr_Kevin, 4, x, y);
//playerdr = draw_sprite(spr_Kevin, 5, x, y);
//playerdown = draw_sprite(spr_Kevin, 6, x, y);
//playerdl = draw_sprite(spr_Kevin, 7, x, y);
//platkup = draw_sprite(spr_Kevin, 9, x, y);
//platkdown = draw_sprite(spr_Kevin, 11, x, y);
//platkleft = draw_sprite(spr_Kevin, 10, x, y);
//platkright = draw_sprite(spr_Kevin, 8, x, y);



//if hp is less than 1 then trigger death animation and state
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///dodge
state = state_mv

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state machine
//event_inherited()

switch (state) {
    case state_mv:
         state_mv()
         break;
    case state_nrmlAtk: state_nrmlAtk() break;
    case state_dodge:
         state_dodge()
         break;
    case state_run:
         state_run()
         break; 
    case state_atkCombo:
         state_atkCombo()
         break;
    default:
         state_mv();}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_ellipse_colour(x-3, y-3, x+3, y+3, c_gray, c_gray,false)
////Shadow
//draw_sprite(spr_p_test2_sh, image_index, x, y)
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
